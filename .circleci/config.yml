version: 2.1

executors:
  main-executor:
    parameters:
      v:
        type: string

    docker:
      - image: cimg/python:<< parameters.v >>

    environment:
      TEST_ARGS: "--junitxml test-results/pytest/coverage.xml --cov-report html:coverage"

commands:
  install_dependencies:
    steps:
      - run:
          name: clone daemon
          command: |
            git clone https://github.com/bitcartcc/bitcart ~/bitcart-daemon

      - restore_cache:
          keys:
            - v5-dependencies-{{ .Branch }}-{{ checksum "~/.pyenv/version" }}-{{ checksum "setup.py" }}-{{ checksum "test-requirements.txt" }}-{{ checksum "~/bitcart-daemon/requirements/daemons/btc.txt" }}

      - run:
          name: install library
          command: |
            virtualenv ~/venv
            echo ". ~/venv/bin/activate" >> $BASH_ENV
            source $BASH_ENV
            pip install .   
            pip install -r test-requirements.txt

      - run:
          name: install daemon
          command: |
            sudo apt update
            sudo apt install libsecp256k1-dev
            cd ~/bitcart-daemon
            pip install -r requirements/base.txt
            pip install -r requirements/daemons/btc.txt

      - save_cache:
          paths:
            - ~/venv
          key: v5-dependencies-{{ .Branch }}-{{ checksum "~/.pyenv/version" }}-{{ checksum "setup.py" }}-{{ checksum "test-requirements.txt" }}-{{ checksum "~/bitcart-daemon/requirements/daemons/btc.txt" }}

  upload-results:
    steps:
      - store_test_results:
          path: test-results

      - store_artifacts:
          path: coverage

      - store_artifacts:
          path: test-results

jobs:
  test:
    parameters:
      v:
        type: string
        default: "3.7"

    executor:
      name: main-executor
      v: << parameters.v >>

    environment:
      PYTHON: << parameters.v >>

    working_directory: ~/repo

    steps:
      - checkout

      - install_dependencies

      - run:
          name: prepare daemon
          command: |
            cd ~/bitcart-daemon
            make mainnet
          background: true

      - run:
          name: run fast tests
          command: |
            make ci
            codecov -F tests -e PYTHON

      - upload-results

  functional-tests:
    executor:
      name: main-executor
      v: "3.7"

    working_directory: ~/repo

    steps:
      - checkout

      - install_dependencies

      - run:
          name: install regtest utils
          command: |
            sudo add-apt-repository -y ppa:luke-jr/bitcoincore
            sudo apt update
            sudo apt install -y bitcoind
            sudo apt install screen

      - run:
          name: prepare bitcoind
          command: |
            make bitcoind
          background: true

      - run:
          name: prepare electrumx
          command: |
            make electrumx
          background: true

      - run:
          name: prepare regtest daemon
          command: |
            cd ~/bitcart-daemon
            make regtest
          background: true

      - run:
          name: prepare regtest lightning node
          command: |
            cd ~/bitcart-daemon
            make regtestln
          background: true

      - run:
          name: run regtest tests
          command: |
            sleep 10s
            make regtest
            codecov -F functional-tests

      - upload-results

  deploy:
    docker:
      - image: cimg/python:3.7
    steps:
      - checkout

      - run:
          name: setup credentials
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASS" >> ~/.pypirc

      - run:
          name: create env, build dist and upload
          command: |
            virtualenv ~/venv
            . ~/venv/bin/activate
            pip install -U wheel twine
            python setup.py sdist 
            python setup.py bdist_wheel
            twine upload dist/*

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test:
          name: test-<< matrix.v >>
          matrix:
            parameters:
              v:
                - "3.7"
                - "3.8"
                - "3.9"

      - functional-tests:
          requires:
            - test

      - deploy:
          context: global
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
