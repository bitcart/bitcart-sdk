version: 2.1
commands:
  install_dependencies:
    parameters:
      v:
        type: string
        default: "3.7"

    steps:
      - run:
          name: clone daemon
          command: |
            git clone https://github.com/bitcartcc/bitcart ~/bitcart-daemon

      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "setup.py" }}-{{ checksum "test-requirements.txt" }}-{{ checksum "~/bitcart-daemon/requirements/daemons/btc.txt" }}-{{ .Branch }}-<< parameters.v >>
            - v4-dependencies-

      - run:
          name: install library
          command: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pip install -U pip
            pip install .   
            pip install -r test-requirements.txt

      - run:
          name: install daemon
          command: |
            . ~/venv/bin/activate
            sudo apt install libsecp256k1-dev
            cd ~/bitcart-daemon
            pip install -r requirements/base.txt
            pip install -r requirements/daemons/btc.txt

      - save_cache:
          paths:
            - ~/venv

          key: v4-dependencies-{{ checksum "setup.py" }}-{{ checksum "test-requirements.txt" }}-{{ checksum "~/bitcart-daemon/requirements/daemons/btc.txt" }}-{{ .Branch }}-<< parameters.v >>

jobs:
  test:
    parameters:
      v:
        type: string
        default: "3.7"
    docker:
      - image: circleci/python:<< parameters.v >>

    environment:
      PYTHON: << parameters.v >>

    working_directory: ~/repo

    steps:
      - checkout

      - install_dependencies:
          v: << parameters.v >>

      - run:
          name: prepare daemon
          command: |
            . ~/venv/bin/activate
            cd ~/bitcart-daemon
            make mainnet
          background: true

      - run:
          name: run fast tests
          command: |
            . ~/venv/bin/activate
            make ci
            codecov -F tests -e PYTHON

  functional-tests:
    docker:
      - image: circleci/python:3.7
    environment:
      BITCOIND_VERSION: 0.21.0

    working_directory: ~/repo

    steps:
      - checkout

      - run: echo $BITCOIND_VERSION > /tmp/bitcoind-version

      - restore_cache:
          keys:
            - v1-bitcoind-{{ checksum "/tmp/bitcoind-version" }}

      - install_dependencies

      - run:
          name: install regtest utils
          command: |
            . ~/venv/bin/activate
            mkdir -p ~/bitcoind && cd ~/bitcoind
            wget -N https://bitcoin.org/bin/bitcoin-core-$BITCOIND_VERSION/bitcoin-$BITCOIND_VERSION-x86_64-linux-gnu.tar.gz
            tar xzf bitcoin-$BITCOIND_VERSION-x86_64-linux-gnu.tar.gz
            sudo install -m 0755 -o root -g root -t /usr/local/bin bitcoin-$BITCOIND_VERSION/bin/*
            sudo apt install screen
            pip install electrumx

      - save_cache:
          paths:
            - ~/bitcoind
          key: v1-bitcoind-{{ checksum "/tmp/bitcoind-version" }}

      - run:
          name: prepare bitcoind
          command: |
            . ~/venv/bin/activate
            make bitcoind
          background: true

      - run:
          name: prepare electrumx
          command: |
            . ~/venv/bin/activate
            make electrumx
          background: true

      - run:
          name: prepare regtest daemon
          command: |
            . ~/venv/bin/activate
            cd ~/bitcart-daemon
            make regtest
          background: true

      - run:
          name: prepare regtest lightning node
          command: |
            . ~/venv/bin/activate
            cd ~/bitcart-daemon
            make regtestln
          background: true

      - run:
          name: run regtest tests
          command: |
            . ~/venv/bin/activate
            sleep 10s
            make regtest
            codecov -F functional-tests
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: setup credentials
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASS" >> ~/.pypirc
      - run:
          name: create env, build dist and upload
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U wheel twine
            python setup.py sdist 
            python setup.py bdist_wheel
            twine upload dist/*

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test:
          name: test-<< matrix.v >>
          matrix:
            parameters:
              v:
                - "3.7"
                - "3.8"
                - "3.9"
      - functional-tests:
          requires:
            - test
      - deploy:
          context: global
          requires:
            - test
            - functional-tests
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
